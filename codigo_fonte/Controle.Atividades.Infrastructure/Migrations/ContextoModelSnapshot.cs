// <auto-generated />
using System;
using Controle.Atividades.Infrastructure.BancoDeDados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Controle.Atividades.Infrastructure.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Controle.Atividades.Domain.Entidades.Analista", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("codigo");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("ativo");

                    b.HasKey("Codigo");

                    b.ToTable("analista");

                    b.HasData(
                        new
                        {
                            Codigo = new Guid("d5317f45-15a5-43e4-ba99-9bf8c35ab643"),
                            Email = "askaam@sf.prefeitura.sp.gov.br",
                            Nome = "Alex Kaam",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("6c364e7d-e18e-438a-9ad3-c6d1b1fb8e6a"),
                            Email = "avieira@sf.prefeitura.sp.gov.br",
                            Nome = "Arthur Vieira",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("d9240918-ab52-40de-ae14-2849832f4ee2"),
                            Email = "caandrade@sf.prefeitura.sp.gov.br",
                            Nome = "Cláudio Almeida",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("ebe38f75-f091-49e3-9555-038a74ad9c5b"),
                            Email = "csmagno@sf.prefeitura.sp.gov.br",
                            Nome = "Cláudio Magno",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("0d602ec9-e54a-4e5c-a7ec-376762f82228"),
                            Email = "fmsilva@sf.prefeitura.sp.gov.br",
                            Nome = "Félix Silva",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("a520c331-959d-42ad-82f9-dbb2b2c79491"),
                            Email = "gcsantanna@sf.prefeitura.sp.gov.br",
                            Nome = "Gabriel Capetini",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("d0b0fe52-b524-4cbd-987f-cf2df6ab0903"),
                            Email = "gmarrafon@sf.prefeitura.sp.gov.br",
                            Nome = "Glaucon Marrafon",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("abe5dc57-8391-4806-a4bf-486a981de0aa"),
                            Email = "lcebarreto@sf.prefeitura.sp.gov.br",
                            Nome = "Luis Barreto",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("0acb23ec-fd56-4136-8d9b-476a5c28c373"),
                            Email = "lfmleitao@sf.prefeitura.sp.gov.br",
                            Nome = "Luis Monteiro",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("ab9a0ac4-38bf-4e40-8e87-9e3b11037b5a"),
                            Email = "rsmiranda@sf.prefeitura.sp.gov.br",
                            Nome = "Rafael Miranda",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("458a7f19-062a-4643-9f62-4318c1518d5c"),
                            Email = "rgsouza@sf.prefeitura.sp.gov.br",
                            Nome = "Renan Guedes",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("7aca6e61-3020-4685-827a-4d5e6639645b"),
                            Email = "tsmachado@sf.prefeitura.sp.gov.br",
                            Nome = "Thiago Maximiliano",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Controle.Atividades.Domain.Entidades.Atividade", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("cd_atividade");

                    b.Property<Guid?>("CodigoAnalista")
                        .HasColumnType("uuid")
                        .HasColumnName("codigo_analista");

                    b.Property<Guid?>("CodigoLider")
                        .HasColumnType("uuid")
                        .HasColumnName("codigo_lider");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dt_criacao");

                    b.Property<DateTime>("DtFechamento")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dt_fechamento");

                    b.Property<DateTime>("DtModificacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dt_modificacao");

                    b.Property<int?>("NumeroRedmine")
                        .HasColumnType("integer")
                        .HasColumnName("nm_redmine");

                    b.Property<string>("Sistema")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sistema");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoAnalista");

                    b.HasIndex("CodigoLider");

                    b.ToTable("atividade");
                });

            modelBuilder.Entity("Controle.Atividades.Domain.Entidades.Lider", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("codigo");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("ativo");

                    b.HasKey("Codigo");

                    b.ToTable("lider");

                    b.HasData(
                        new
                        {
                            Codigo = new Guid("59af77c0-980e-44ba-a54e-3104f21d5efe"),
                            Email = "camendes@sf.prefeitura.sp.gov.br",
                            Nome = "Calemino Mendes",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("43862231-caff-4f25-955e-3bc5da729974"),
                            Email = "fbrambilla@sf.prefeitura.sp.gov.br",
                            Nome = "Fernando Brambilla",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("b4010015-dc2b-473d-a486-751ceecab6d4"),
                            Email = "rpioli@sf.prefeitura.sp.gov.br",
                            Nome = "Rafael Pioli",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("bcb63412-cdd5-4455-a465-3e6f0867dce6"),
                            Email = "rodrigomallmann@sf.prefeitura.sp.gov.br",
                            Nome = "Rodrigo Guerra",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Controle.Atividades.Domain.Entidades.Observacao", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("cd_observacao");

                    b.Property<Guid>("CodigoAtividade")
                        .HasColumnType("uuid")
                        .HasColumnName("cd_atividade");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data");

                    b.Property<string>("Registro")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("registro");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoAtividade");

                    b.ToTable("observacao");
                });

            modelBuilder.Entity("Controle.Atividades.Domain.Entidades.Atividade", b =>
                {
                    b.HasOne("Controle.Atividades.Domain.Entidades.Analista", "Analista")
                        .WithMany()
                        .HasForeignKey("CodigoAnalista");

                    b.HasOne("Controle.Atividades.Domain.Entidades.Lider", "Lider")
                        .WithMany()
                        .HasForeignKey("CodigoLider");

                    b.Navigation("Analista");

                    b.Navigation("Lider");
                });

            modelBuilder.Entity("Controle.Atividades.Domain.Entidades.Observacao", b =>
                {
                    b.HasOne("Controle.Atividades.Domain.Entidades.Atividade", "Atividade")
                        .WithMany("Historico")
                        .HasForeignKey("CodigoAtividade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atividade");
                });

            modelBuilder.Entity("Controle.Atividades.Domain.Entidades.Atividade", b =>
                {
                    b.Navigation("Historico");
                });
#pragma warning restore 612, 618
        }
    }
}
