// <auto-generated />
using System;
using Controle.Atividades.Infrastructure.BancoDeDados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Controle.Atividades.Infrastructure.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Controle.Atividades.Domain.Entidades.Analista", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("codigo");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("ativo");

                    b.HasKey("Codigo");

                    b.ToTable("analista");

                    b.HasData(
                        new
                        {
                            Codigo = new Guid("f494b50d-5eab-4879-9906-3e8befd78672"),
                            Email = "askaam@sf.prefeitura.sp.gov.br",
                            Nome = "Alex Kaam",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("0284a6a8-98bd-491f-8e23-6b244801f61c"),
                            Email = "avieira@sf.prefeitura.sp.gov.br",
                            Nome = "Arthur Vieira",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("0cd88e71-7b16-42b4-ace6-f174974c2c53"),
                            Email = "caandrade@sf.prefeitura.sp.gov.br",
                            Nome = "Cláudio Almeida",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("d3562e25-bc93-4979-8385-fa8b0b91d01c"),
                            Email = "csmagno@sf.prefeitura.sp.gov.br",
                            Nome = "Cláudio Magno",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("d3ee6eba-f641-48a5-8310-cf174b732fa2"),
                            Email = "fmsilva@sf.prefeitura.sp.gov.br",
                            Nome = "Félix Silva",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("cbff8adc-22d0-4667-85a0-9d30369491b7"),
                            Email = "gcsantanna@sf.prefeitura.sp.gov.br",
                            Nome = "Gabriel Capetini",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("938b084c-4d08-4ee8-8683-8235ac62aba0"),
                            Email = "gmarrafon@sf.prefeitura.sp.gov.br",
                            Nome = "Glaucon Marrafon",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("e66c9f1e-4ed5-4b6b-a4be-1cf72cea91d2"),
                            Email = "lcebarreto@sf.prefeitura.sp.gov.br",
                            Nome = "Luis Barreto",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("a57d2763-ad4e-43ef-b1ab-bf4c48bb674c"),
                            Email = "lfmleitao@sf.prefeitura.sp.gov.br",
                            Nome = "Luis Monteiro",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("86bfbf63-8490-4489-ae6d-ecfedf7fc352"),
                            Email = "rsmiranda@sf.prefeitura.sp.gov.br",
                            Nome = "Rafael Miranda",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("a606e3a1-640d-482a-947c-a86cbbe9889c"),
                            Email = "rgsouza@sf.prefeitura.sp.gov.br",
                            Nome = "Renan Guedes",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("bd8e7afb-2fd1-4847-bca0-0220653c73fe"),
                            Email = "tsmachado@sf.prefeitura.sp.gov.br",
                            Nome = "Thiago Maximiliano",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("b65bccf4-886c-4ba6-80c5-eae51f5b02d1"),
                            Email = "",
                            Nome = "Todos",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Controle.Atividades.Domain.Entidades.Atividade", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("cd_atividade");

                    b.Property<Guid?>("CodigoAnalista")
                        .HasColumnType("uuid")
                        .HasColumnName("codigo_analista");

                    b.Property<Guid?>("CodigoLider")
                        .HasColumnType("uuid")
                        .HasColumnName("codigo_lider");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dt_criacao");

                    b.Property<DateTime?>("DtFechamento")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dt_fechamento");

                    b.Property<DateTime?>("DtModificacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dt_modificacao");

                    b.Property<int?>("NumeroRedmine")
                        .HasColumnType("integer")
                        .HasColumnName("nm_redmine");

                    b.Property<string>("Sistema")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sistema");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoAnalista");

                    b.HasIndex("CodigoLider");

                    b.ToTable("atividade");
                });

            modelBuilder.Entity("Controle.Atividades.Domain.Entidades.Lider", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("codigo");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("ativo");

                    b.HasKey("Codigo");

                    b.ToTable("lider");

                    b.HasData(
                        new
                        {
                            Codigo = new Guid("1cbd6dfb-23f0-4798-91f9-e500dc271f85"),
                            Email = "camendes@sf.prefeitura.sp.gov.br",
                            Nome = "Calemino Mendes",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("bc2cf0b8-de82-4cc1-9e12-896f2eef3ca7"),
                            Email = "fbrambilla@sf.prefeitura.sp.gov.br",
                            Nome = "Fernando Brambilla",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("4db04479-f856-423b-9ff8-3a46a5ce3115"),
                            Email = "rpioli@sf.prefeitura.sp.gov.br",
                            Nome = "Rafael Pioli",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("611f0467-8cc5-4a13-90f1-ae00c3e91e5a"),
                            Email = "rodrigomallmann@sf.prefeitura.sp.gov.br",
                            Nome = "Rodrigo Guerra",
                            Status = 1
                        },
                        new
                        {
                            Codigo = new Guid("44819af5-0c8a-4790-9a2b-c3f3e117634c"),
                            Email = "",
                            Nome = "Todos",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Controle.Atividades.Domain.Entidades.Observacao", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("cd_observacao");

                    b.Property<Guid>("CodigoAtividade")
                        .HasColumnType("uuid")
                        .HasColumnName("cd_atividade");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data");

                    b.Property<string>("Registro")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("registro");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoAtividade");

                    b.ToTable("observacao");
                });

            modelBuilder.Entity("Controle.Atividades.Domain.Entidades.Atividade", b =>
                {
                    b.HasOne("Controle.Atividades.Domain.Entidades.Analista", "Analista")
                        .WithMany()
                        .HasForeignKey("CodigoAnalista");

                    b.HasOne("Controle.Atividades.Domain.Entidades.Lider", "Lider")
                        .WithMany()
                        .HasForeignKey("CodigoLider");

                    b.Navigation("Analista");

                    b.Navigation("Lider");
                });

            modelBuilder.Entity("Controle.Atividades.Domain.Entidades.Observacao", b =>
                {
                    b.HasOne("Controle.Atividades.Domain.Entidades.Atividade", "Atividade")
                        .WithMany("Historico")
                        .HasForeignKey("CodigoAtividade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atividade");
                });

            modelBuilder.Entity("Controle.Atividades.Domain.Entidades.Atividade", b =>
                {
                    b.Navigation("Historico");
                });
#pragma warning restore 612, 618
        }
    }
}
